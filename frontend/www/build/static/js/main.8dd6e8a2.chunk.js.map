{"version":3,"sources":["api/api.js","utils/localStorage.js","store/actions/loginAction.js","components/LoginCard.js","components/AuthCard.js","components/LoginPage.js","components/Modal.js","components/ProfileCard.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/middleware/logger.js","store/middleware/index.js","index.js"],"names":["createAccount","name","email","password","avatarImage","callback","a","process","headers","body","JSON","stringify","avatar","fetch","method","then","response","status","json","console","log","data","results","catch","error","removeFromLocalStorage","localStorage","removeItem","LOGIN","LOGOUT","loginAction","uid","token","type","logoutAction","handleAccountCreation","setUser","dispatch","result","undefined","user","_id","signedURL","url","file","header","fileUpload","handleLogin","setIsLoggedIn","loginAccount","handleLogout","logoutAccount","handleDelete","setIsDeleted","deleteAccount","handleGetProfile","setProfile","getProfile","connect","state","toggle","useState","setEmail","setPassword","isLoggedIn","to","className","onSubmit","event","preventDefault","handleSubmit","value","placeholder","onChange","target","handleEmailChange","handlePasswordChange","onClick","confirmPassword","setconfirmPassword","setName","setAvatarImage","isUploaded","setIsUploaded","updateThumbnail","dropZoneElement","thumbnailElement","document","createElement","classList","add","appendChild","thumbnail","children","startsWith","reader","FileReader","readAsDataURL","onload","style","backgroundImage","alert","onDragOver","onDragLeave","remove","onDrop","files","dataTransfer","getElementById","click","id","parentNode","length","handleNameChange","handleConfirmPasswordChange","LoginPage","login","setLogin","handleToggle","isDeleted","isOpen","setIsOpen","profile","useEffect","handleToggleModal","Fragment","src","alt","isAuthenticated","exact","path","component","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","authReducer","action","logger","store","next","group","returnValue","getState","groupEnd","applyMiddleware","thunk","persistedState","serializedState","getItem","parse","loadFromLocalStorage","createStore","middleware","subscribe","setItem","saveToLocalStorage","ReactDOM"],"mappings":"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","file":"static/js/main.8dd6e8a2.chunk.js","sourcesContent":["\r\n//Creating a new account\r\nexport const createAccount = async (name,email,password,avatarImage,callback)=>{\r\n    const url = process.env.REACT_APP_API_URL + '/user/register';\r\n    const method = 'post';\r\n    const mode ='no-cors'\r\n    const headers = {\r\n        'content-type':'application/json'\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n        avatar:avatarImage.name\r\n    })\r\n\r\n    const options = {\r\n        method,\r\n        headers,\r\n        body\r\n    }\r\n\r\n    let results;\r\n    fetch(url, options).then((response)=>{\r\n        if(response.status > 299){\r\n            console.log(\"error\")\r\n            return\r\n        }\r\n        return response.json()\r\n    }).then((data)=>{\r\n        results = data;\r\n    }).then(()=>{\r\n        callback(results)\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n    });\r\n\r\n}\r\n\r\n\r\n//Loggin in\r\n\r\nexport const loginAccount = (email,password,callback)=>{\r\n    const url =process.env.REACT_APP_API_URL + '/user/auth'\r\n    const method = 'post'\r\n    const headers = {\r\n        'Content-type':'application/json'\r\n    }\r\n    const body = JSON.stringify({\r\n        email,\r\n        password\r\n    })\r\n\r\n    const options = {\r\n        method,\r\n        headers,\r\n        body\r\n    }\r\n\r\n\r\n    let results;\r\n    fetch(url,options)\r\n        .then((response)=>{\r\n            if(response.status > 299){\r\n                console.log(\"unable to login\")\r\n                return\r\n            }\r\n\r\n            return response.json()\r\n        }).then((data)=>{\r\n            results = data\r\n        }).then(()=>{\r\n            callback(results)\r\n    })\r\n}\r\n\r\n//Logging out\r\n\r\nexport const logoutAccount =(token,callback)=>{\r\n    const url = process.env.REACT_APP_API_URL + '/user/logout'\r\n    const method = 'post'\r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token,\r\n        'Content-type': 'application/json'\r\n    }\r\n\r\n    const options = {\r\n        method,\r\n        headers\r\n    }\r\n\r\n    let results;\r\n    fetch(url,options).then((response)=>{\r\n        if(response.status > 299){\r\n            console.log(\"Unable to delete user\")\r\n            return\r\n        }\r\n        return response.json()\r\n    }).then((data)=>{\r\n        results = data;\r\n    }).then(()=>{\r\n        callback(results)\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n    });\r\n}\r\n\r\n//delete user\r\nexport const deleteAccount = (token,callback) => {\r\n    const url = process.env.REACT_APP_API_URL + '/user/delete'\r\n    const method = 'delete'\r\n    const headers = {\r\n        'Content-type':'application/json',\r\n        'Authorization':'Bearer ' + token\r\n\r\n    }\r\n\r\n    const options = {\r\n        method,\r\n        headers\r\n    }\r\n\r\n    let result\r\n\r\n    fetch(url,options).then((response)=>{\r\n        if(response.status > 299){\r\n            console.log(\"Unable to delete account\")\r\n            return\r\n        }\r\n\r\n        return response.json()\r\n    }).then((data)=>{\r\n        result = data\r\n    }).then(()=>{\r\n        callback(result)\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport const fileUpload = (url,file,callback)=>{\r\n    const method = 'put';\r\n    const mode = 'no-cors'\r\n    const header = {\r\n        'Content-type': file.type\r\n    }\r\n    const body = file\r\n\r\n    const options = {\r\n        method,\r\n        header,\r\n        body\r\n    }\r\n\r\n    let result;\r\n    fetch(url,options).then((response)=>{\r\n        console.log(\"1\")\r\n        if(response.status > 299){\r\n            console.log(\"Could not upload file\", response.status)\r\n            return\r\n        }\r\n        console.log(\"2\")\r\n        console.log(response)\r\n\r\n        return response // trying to parse json() creates a syntax error \"unexpected end to JSON\"\r\n    }).then((data)=>{\r\n        result = data\r\n        console.log(\"3\")\r\n    }).then(()=>{\r\n        callback(result)\r\n        console.log(\"4\")\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\n//get profile\r\nexport const getProfile=(token,callback)=>{\r\n    const url = process.env.REACT_APP_API_URL + '/user/profile'\r\n    const method = 'get'\r\n    const headers = {\r\n        'Content-type':'application/json',\r\n        'Authorization': 'Bearer ' +  token\r\n    }\r\n\r\n    const options = {\r\n        method,\r\n        headers\r\n    }\r\n\r\n    let result;\r\n\r\n    fetch(url,options).then((response)=>{\r\n        if(response.status > 299){\r\n            console.log(\"Unable to fetch signedURL\",response.status)\r\n            return\r\n        }\r\n\r\n        return response.json()\r\n    }).then((data)=>{\r\n        result = data\r\n    }).then(()=>{\r\n        callback(result)\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n    })\r\n\r\n}\r\n","\r\nexport function saveToLocalStorage(state){\r\n\r\n    try{\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('simpleMern',serializedState)\r\n    }catch(error){\r\n        console.log(\"Unable to save to localstorage\",error)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function loadFromLocalStorage(){\r\n    try{\r\n        const serializedState = localStorage.getItem('simpleMern');\r\n        if(serializedState === null){\r\n            return undefined //redux will generate an error if return value is null\r\n        }\r\n        return JSON.parse(serializedState)\r\n    }catch(error){\r\n        console.log(\"Unable to load state from local storage\",error)\r\n        return undefined //redux will generate an error if not undefined\r\n    }\r\n}\r\n\r\nexport function removeFromLocalStorage(){\r\n    try{\r\n        localStorage.removeItem('simpleMern')\r\n    }catch(error){\r\n        console.log(\"Unable to remove item from local storage\",error)\r\n    }\r\n\r\n}\r\n","import {createAccount, logoutAccount, loginAccount, deleteAccount, fileUpload, getProfile} from \"../../api/api\";\r\nimport {removeFromLocalStorage} from \"../../utils/localStorage\";\r\n\r\n//Constants\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\n//actions\r\nconst loginAction = (uid,token)=>{\r\n    return {\r\n        type:LOGIN,\r\n        uid,\r\n        token\r\n    }\r\n}\r\n\r\nexport const logoutAction = ()=>{\r\n    return {\r\n        type:LOGOUT\r\n    }\r\n}\r\n\r\n\r\n//handlers\r\n\r\n//Creating account\r\nexport const handleAccountCreation =(name,email,password,avatarImage,setUser)=>{\r\n    return (dispatch)=>{\r\n        return createAccount(name,email,password, avatarImage,(result)=>{\r\n\r\n            if(result !== undefined){\r\n                dispatch(loginAction(result.user._id,result.token))\r\n                console.log(\"hope:\",result.user.avatar)\r\n                console.log(\"Yes\", result.signedURL)\r\n\r\n                fileUpload(result.signedURL,avatarImage,(result)=>{\r\n                    console.log(\"5\")\r\n                    setUser(result)\r\n                    console.log(\"6\")\r\n                    console.log(\"Finale result\", result)\r\n\r\n\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n//login\r\nexport const handleLogin=(email,password,setIsLoggedIn)=>{\r\n    return (dispatch)=>{\r\n        return loginAccount(email,password,(result)=>{\r\n            setIsLoggedIn(result) //if setIsLoggedIn is called after dispatch it causes a memory leak\r\n            if(result !== undefined){\r\n                dispatch(loginAction(result.user._id,result.token))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Logging out\r\nexport const handleLogout = (token,uid) =>{\r\n    return (dispatch)=>{\r\n\r\n        removeFromLocalStorage()\r\n        dispatch(logoutAction())\r\n\r\n        return logoutAccount(token,(results)=>{\r\n            console.log(\"yoohoo:\",results)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Delete account\r\nexport const handleDelete=(token,setIsDeleted)=>{\r\n    return (dispatch)=>{\r\n        return deleteAccount(token, (result)=>{\r\n            if(result !== undefined){\r\n                setIsDeleted(true)\r\n                removeFromLocalStorage()\r\n                dispatch(logoutAction())\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n//get profile\r\n\r\nexport const handleGetProfile = (token,setProfile) =>{\r\n    return (dispatch)=>{\r\n        return getProfile(token,(result)=>{\r\n            setProfile(result)\r\n            console.log(result)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {handleLogin} from \"../store/actions/loginAction\";\r\n\r\n\r\nfunction LoginCard({toggle,dispatch,state}){\r\n\r\n    let [email,setEmail] = useState('')\r\n    let [password, setPassword]= useState('')\r\n    let [isLoggedIn,setIsLoggedIn] = useState(undefined)\r\n\r\n    const handleEmailChange = (event) =>{\r\n        event.preventDefault()\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event)=>{\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(handleLogin(email,password,setIsLoggedIn))\r\n\r\n    }\r\n\r\n    if(isLoggedIn !== undefined){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className='login-container'>\r\n            <form\r\n                className='login-form'\r\n                onSubmit={(event)=>{\r\n                    handleSubmit(event)\r\n                }}\r\n            >\r\n                <input\r\n                    className='login-input'\r\n                    type='text'\r\n                    value={email}\r\n                    placeholder={'Email'}\r\n                    onChange={(event)=>{\r\n                        handleEmailChange(event)\r\n                    }}\r\n                />\r\n                <input\r\n                    className='login-input'\r\n                    type='text'\r\n                    value={password}\r\n                    placeholder={'Password'}\r\n                    onChange={(event)=>{\r\n                        handlePasswordChange(event)\r\n                    }}\r\n                />\r\n                <button\r\n                    className='primary-button'\r\n                    type=\"submit\"\r\n                >\r\n                    Login\r\n                </button>\r\n            </form>\r\n            <span\r\n                onClick={toggle}\r\n                className='tertiary-button'\r\n            >\r\n                Don't have an account?\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state,{toggle}){\r\n    return {\r\n        state,\r\n        toggle\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginCard);\r\n","import React,{useState} from 'react';\r\nimport {handleAccountCreation} from '../store/actions/loginAction'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\n\r\nfunction AuthCard({toggle,dispatch}){\r\n\r\n    let [email,setEmail] = useState('');\r\n    let [password, setPassword]= useState('');\r\n    let [confirmPassword, setconfirmPassword] = useState('')\r\n    let [name,setName] = useState('')\r\n    let [user, setUser]= useState(undefined)\r\n    let [avatarImage,setAvatarImage] = useState({})\r\n    let [isUploaded,setIsUploaded] = useState(false)\r\n\r\n    const handleEmailChange = (event) =>{\r\n        event.preventDefault()\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event)=>{\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleNameChange = (event) =>{\r\n        event.preventDefault()\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleConfirmPasswordChange = (event)=>{\r\n        event.preventDefault()\r\n        setconfirmPassword(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        if(confirmPassword === password){\r\n            dispatch(handleAccountCreation(name,email,password,avatarImage,setUser))\r\n\r\n        }else{\r\n            alert(\"Passwords don't match\")\r\n        }\r\n\r\n    }\r\n\r\n    if(user !== undefined){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    const updateThumbnail=(dropZoneElement,file)=>{\r\n        setAvatarImage(file)\r\n\r\n        const thumbnailElement = document.createElement('div')\r\n        thumbnailElement.classList.add('drop-zone__thumb')\r\n\r\n        dropZoneElement.appendChild(thumbnailElement)\r\n\r\n        const thumbnail = dropZoneElement.children[2]\r\n\r\n\r\n        //show thumbnail for image files\r\n        if(file.type.startsWith(\"image/\")){\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                thumbnail.style.backgroundImage = `url('${reader.result}')`\r\n            }\r\n        } else {\r\n            thumbnail.style.backgroundImage = null;\r\n        }\r\n\r\n        thumbnail.classList.add('drop-zone--dropped')\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='login-container'>\r\n            <form\r\n                className='login-form'\r\n                onSubmit={(event)=>{\r\n                    handleSubmit(event)\r\n                }}\r\n            >\r\n                <div\r\n                    className={'drop-zone '}\r\n                    onDragOver={(event)=>{\r\n                        event.preventDefault()\r\n                        event.target.classList.add('drop-zone--over')\r\n\r\n                    }}\r\n                    onDragLeave={(event)=>{\r\n                        event.preventDefault()\r\n                        event.target.classList.remove('drop-zone--over')\r\n\r\n                    }}\r\n                    onDrop={(event)=>{\r\n                        event.preventDefault()\r\n                        setIsUploaded(true)\r\n                        event.target.children[1].files = event.dataTransfer.files\r\n                        updateThumbnail(event.target,event.dataTransfer.files[0])\r\n\r\n                        event.target.classList.remove('drop-zone--over')\r\n\r\n\r\n                    }}\r\n                    onClick={(event)=>{\r\n                        const fileInput = document.getElementById('file-input')\r\n                        fileInput.click()\r\n\r\n                    }}\r\n                >\r\n                    {!isUploaded && <span\r\n                        className=\"drop-zone__prompt\"\r\n                    >\r\n                        Drop file here or click to upload\r\n                    </span>}\r\n                    <input\r\n                        type='file'\r\n                        name='avatar'\r\n                        id='file-input'\r\n                        className='drop-zone__input'\r\n                        onChange={(event)=>{\r\n\r\n                            const dropZoneElement = event.target.parentNode\r\n                            console.log(dropZoneElement)\r\n                            if(event.target.files.length){\r\n                                setIsUploaded(true)\r\n                                updateThumbnail(dropZoneElement,event.target.files[0])\r\n                                console.log(event.target.value,event.target.files)\r\n                            }\r\n\r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n                <input\r\n                    className='login-input'\r\n                    type='text'\r\n                    value={name}\r\n                    placeholder={'Name'}\r\n                    onChange={(event)=>{\r\n                        handleNameChange(event)\r\n                    }}\r\n                />\r\n                <input\r\n                    className='login-input'\r\n                    type='text'\r\n                    value={email}\r\n                    placeholder={'Email'}\r\n                    onChange={(event)=>{\r\n                        handleEmailChange(event)\r\n                    }}\r\n                />\r\n                <input\r\n                    className='login-input'\r\n                    type='text'\r\n                    value={password}\r\n                    placeholder={'Password'}\r\n                    onChange={(event)=>{\r\n                        handlePasswordChange(event)\r\n                    }}\r\n                />\r\n                <input\r\n                    className='login-input'\r\n                    type='text'\r\n                    value={confirmPassword}\r\n                    placeholder={'Confirm Password'}\r\n                    onChange={(event)=>{\r\n                        handleConfirmPasswordChange(event)\r\n                    }}\r\n                />\r\n                <button\r\n                    className='primary-button'\r\n                    type=\"submit\"\r\n                >\r\n                    Create Account\r\n                </button>\r\n            </form>\r\n            <span\r\n                onClick={toggle}\r\n                className='tertiary-button'\r\n            >\r\n                Already have an account?\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return state\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthCard);\r\n","import React,{useState} from 'react';\r\nimport LoginCard from \"./LoginCard\";\r\nimport AuthCard from \"./AuthCard\";\r\n\r\n\r\nfunction LoginPage(){\r\n\r\n    let [login,setLogin] = useState(true)\r\n\r\n    const handleToggle = ()=>{\r\n        setLogin(!login)\r\n    }\r\n\r\n    if(login){\r\n        return (\r\n            <div\r\n                className='loginPage-container'\r\n            >\r\n                <LoginCard toggle={handleToggle}/>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div\r\n                className='loginPage-container'\r\n            >\r\n                <AuthCard toggle={handleToggle}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default LoginPage;\r\n","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport {handleDelete} from \"../store/actions/loginAction\";\r\n\r\nfunction Modal({toggle,token,dispatch}){\r\n\r\n    const [isDeleted, setIsDeleted] = useState(undefined)\r\n\r\n    if(isDeleted !== undefined){\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='modal-outer'>\r\n            <div\r\n                className='modal-inner'\r\n            >\r\n                <div className='modal-container'>\r\n                    <p\r\n                        className='modal-text'\r\n                    >\r\n                        Sure you want to delete this user profile?\r\n                    </p>\r\n                    <button\r\n                        className='primary-button'\r\n                        onClick={()=>{\r\n                            dispatch(handleDelete(token,setIsDeleted))\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                    <span\r\n                        onClick={toggle}\r\n                        className='tertiary-button'\r\n                    >\r\n                        Cancel\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction mapStateToProps({uid,token},{toggle}){\r\n    return {\r\n        uid,\r\n        token,\r\n        toggle\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Modal);\r\n","import React,{useState,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {handleLogout, handleGetProfile} from \"../store/actions/loginAction\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\n\r\nconst userProfile = {\r\n    name:'John Doe',\r\n    email:'john@doe.com',\r\n    avatar: 'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\r\n}\r\n\r\nfunction ProfileCard({uid,token,dispatch}){\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [profile,setProfile] = useState({})\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(handleGetProfile(token,setProfile))\r\n    },[])\r\n\r\n    console.log(\"this\",profile)\r\n\r\n\r\n\r\n    const handleToggleModal = () =>{\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isOpen && <Modal toggle={handleToggleModal}/>}\r\n            {profile.user !== undefined ? <div className='profilecard-container'>\r\n                <div className='profilecard-avatar-container'>\r\n                    <img\r\n                        className='profilecard-avatar_img'\r\n                        src={profile.signedURL !== undefined ? profile.signedURL : './img/loading-spinner.gif'}\r\n                        alt='profile-avatar'\r\n                    />\r\n                </div>\r\n                <div className='profilecard-content-container'>\r\n                    <div className='profilecard-info-container'>\r\n                        <p\r\n                            className='profilecard-info_name'\r\n                        >\r\n                            {profile.user.name}\r\n                        </p>\r\n                        <p\r\n                            className='profilecard-info_email'\r\n                        >\r\n                            {profile.user.email}\r\n                        </p>\r\n                    </div>\r\n                    <div className='profilecard-button-container'>\r\n                        <button\r\n                            className='primary-button'\r\n                            onClick={()=>{\r\n                                dispatch(handleLogout(token,uid))\r\n                            }}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                        <span\r\n                            onClick={handleToggleModal}\r\n                            className='tertiary-button'\r\n                        >\r\n                            Delete\r\n                        </span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div> : <img src='./img/loading-spinner.gif' alt='loading'/>}\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nfunction mapStateToProps({uid,token}){\r\n    return {\r\n        uid,\r\n        token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfileCard);\r\n","import {BrowserRouter, Route} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport ProfileCard from \"./components/ProfileCard\";\r\nimport {connect} from 'react-redux'\r\n\r\nimport './styles/styles.scss';\r\n\r\n\r\nfunction App({isAuthenticated,...props}) {\r\n\r\n console.log(\"first\",isAuthenticated)\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"App\">\r\n          <BrowserRouter>\r\n              <Route exact path={'/'} component={LoginPage}/>\r\n              <Route path={'/profile'} render={(props)=>{\r\n                  console.log(\"inside:\",props)\r\n                  return isAuthenticated ? (<ProfileCard {...props}/>):(<LoginPage {...props}/>)\r\n              }}/>\r\n          </BrowserRouter>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n\r\n    console.log(\"insideMapStateToProps: \",state)\r\n    return {\r\n        isAuthenticated:!!state.token\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {LOGIN,LOGOUT} from \"../actions/loginAction\";\r\n\r\nconst authReducer = (state={},action)=>{\r\n\r\n    switch(action.type){\r\n        case LOGIN:\r\n            return {\r\n                uid:action.uid,\r\n                token:action.token\r\n            }\r\n        case LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","/**\r\n * @description Logging middleware used in development. Enables developer to see state changes in the console\r\n * @param {object} store - the Redux store\r\n * @returns {function(*): function(*=): *}\r\n */\r\nconst logger = (store)=>(next)=>(action)=>{\r\n    console.group(action.type)\r\n        console.log(\"The action: \", action)\r\n        const returnValue = next(action)\r\n        console.log(\"The new state: \", store.getState())\r\n    console.groupEnd()\r\n    return returnValue\r\n}\r\n\r\nexport default logger;","import {applyMiddleware} from \"redux\";\r\nimport logger from \"./logger\";\r\nimport thunk from 'redux-thunk'\r\n\r\n/**\r\n * @description Combines middleware function and exports them\r\n */\r\n\r\nexport default applyMiddleware(thunk,logger)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {createStore} from \"redux\";\r\nimport authReducer from \"./store/reducers/authReducer\";\r\nimport middleware from \"./store/middleware\"\r\nimport {Provider} from 'react-redux'\r\nimport {loadFromLocalStorage, saveToLocalStorage} from \"./utils/localStorage\";\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(\r\n    authReducer,\r\n    persistedState,\r\n    middleware\r\n);\r\n\r\nstore.subscribe(()=>{\r\n    saveToLocalStorage(store.getState())\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}